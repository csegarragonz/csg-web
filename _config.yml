title: Carlos Segarra
url: "https://carlossegarra.com"
#myurl: "https://carlossegarra.com"
myurl: "http://localhost:3000"
baseurl: ""

markdown: kramdown

tracking_id: #

footer: yes
footer_url: "https://carlossegarra.com/"
footer_text: "Last update: 04/10/2023"
favicon_location: 'degree_icon.png'

sass:
    style: compressed
    sass_dir: _sass

# 20/11/2023 - we comment out navigation options, but leave it commented here
# just in case we ever want to re-enable it
# nav:
#  - name: "Projects"
#    link: "/projects.html"
#  - name: "Teaching"
#    link: "/teaching.html"
#  - name: "Service"
#    link: "/service.html"
#  - name: "Contact"
#    link: "/contact.html"
#  - name: "Resume"
#    link: "/assets/SegarraCarlos_CV.pdf"

social-media:
  - id: 'carlos@carlossegarra.com'
    href: 'mailto:'
    title: 'Email'
    fa-icon: 'fa-envelope-square'

  - id: 'carlossegarrag'
    href: 'https://www.twitter.com/'
    title: 'Twitter'
    fa-icon: 'fa-twitter-square'

  - id: 'csegarragonz'
    href: 'https://github.com/'
    title: 'GitHub'
    fa-icon: 'fa-github-square'

  - id: 'carlossegarrag'
    href: 'https://linkedin.com/in/'
    title: 'LinkedIn'
    fa-icon: 'fa-linkedin'

  - id: 'citations?user=U0KR_0cAAAAJ&hl=en'
    href: 'https://scholar.google.com/'
    title: 'Google Scholar'
    fa-icon: 'fa-university'

# Note that the `pdf` is the name of the file under ./assets/papers/
preprints:
  - title: "Faabric: Granular Management of Scientific Applications in The Cloud"
    year: 2023
    authors:
      - "Carlos Segarra"
      - "Simon Shillaker"
      - "Eleftheria Mappoura"
      - "Mayeul Fournial"
      - "Lluis Vilanova"
      - "Peter Pietzuch"
    pdf: "arXiv2023_Faabric.pdf"
    abstract: "With their high parallelism and resource needs, many scientific applications benefit from cloud deployments. Today, scientific applications are executed on dedicated pools of VMs, resulting in resource fragmentation: users pay for underutilised resources, and providers cannot reallocate unused resources between applications. While serverless cloud computing could address these issues, its programming model is incompatible with the use of shared memory and message passing in scientific applications: serverless functions do not share memory directly on the same VM or support message passing semantics when scheduling functions dynamically.
<br />
<br />

We describe Faabric, a new serverless cloud runtime that transparently distributes applications with shared memory and message passing across VMs. Faabric achieves this by scheduling computation in a fine-grained (thread/process) fashion through a new execution abstraction called Granules. To support shared memory, Granules are isolated using WebAssembly but share memory directly; to support message passing, Granules offer asynchronous point-to-point communication. Faabric schedules Granules to meet an application's parallelism needs. It also synchronises changes to Granule's shared memory, and migrates Granules to improve locality.
"

# Note that the `pdf` is the name of the file under ./assets/papers/
publications:
  - title: "Is It Time To Put Cold Starts In The Deep Freeze?"
    venue: "SoCC"
    year: 2024
    authors:
      - "Carlos Segarra"
      - "Ivan Durev"
      - "Peter Pietzuch"
    pdf: "socc24-dfaas.pdf"
    abstract: "Cold-start times have been the \"end-all, be-all\" metric for research in serverless cloud computing over the past decade. Reducing the impact of cold starts matters, because they can be the biggest contributor to a serverless function's end-to-end execution time. Recent studies from cloud providers, however, indicate that, in practice, a majority of serverless functions are triggered by non-interactive workloads. To substantiate this, we study the types of serverless functions used in 35 publications and find that over 80% of functions are not semantically latency sensitive. If a function is non-interactive and latency insensitive, is end-to-end execution time the right metric to optimize in serverless? What if cold starts do not matter that much, after all?
<br />
<br />

In this vision paper, we explore what serverless environments in which cold starts do not matter would look like. We make the case that serverless research should focus on supporting latency insensitive, batch, workloads. Based on this, we explore the design space for DFaaS, a serverless framework with an execution model in which functions can be arbitrarily delayed. DFaaS users annotate each function with a delay tolerance and, as long as the deadline has not passed, the runtime may interrupt or migrate function execution. Our micro-benchmarks suggest that, by targeting batch workloads, DFaaS can improve substantially the resource usage of serverless clouds and lower costs for users.
"

  - title: "Serverless Confidential Containers: Challenges and Opportunities"
    venue: "SESAME @ EuroSys"
    year: 2024
    authors:
      - "Carlos Segarra"
      - "Tobin Feldman-Fitzthum"
      - "Daniele Buono"
      - "Peter Pietzuch"
    pdf: "SESAME2024_ServerlessCoCo.pdf"
    abstract: "Serverless computing allows users to execute pieces of code (so called functions) on-demand in the cloud without having to provision any hardware resources. However, by executing in the cloud and delegating control over hardware resources, the integrity of the execution and the confidentiality of function code and data are at the mercy of the cloud provider and serverless runtime. Confidential computing aims to remove trust from the cloud provider by executing applications inside hardware enclaves. In spite of the increasing adoption of confidential computing, designing a confidential serverless runtime with moderate performance overhead remains an open challenge.
<br />
<br />

In this short article we present our experience porting the Knative serverless runtime to a confidential setting using Confidential Containers (CoCo), a technology that allows the execution of unmodified (encrypted) container images inside confidential VMs (cVMs). Our results show that cVMs are not ready to execute container-based serverless functions. Starting a serverless function in a CoCo from an encrypted container image with attestation takes up to 17 seconds. Starting 16 serverless functions concurrently takes more than three minutes, 20× slower than its non-confidential counterpart. We analyze the main sources of overhead, and outline the research challenges to bridge the gap between confidential and serverless computing.
"

  - title: "A Novel Framework for the Analysis of Unknown Transactions in Bitcoin: Theory, Model, and Experimental Results"
    venue: BITCOIN
    year: 2021
    authors:
      - "Mauroantonio Caprolu"
      - "Matteo Pontecorvi"
      - "Matteo Signorini"
      - "Carlos Segarra"
      - "Roberto Pietro"
    pdf: "BITCOIN2021_CENTRIC.pdf"
    abstract: "Bitcoin (BTC) is probably the most transparent payment network in the world, thanks to the full history of transactions available to the public. Though, Bitcoin is not a fully anonymous environment, rather a pseudonymous one, accounting for a number of attempts to beat its pseudonimity using clustering techniques. There is, however, a recurring assumption in all the cited deanonymization techniques: that each transaction output has an address attached to it. That assumption is false. An evidence is that, as of block height 591,872, there are several millions transactions with at least one output for which the Bitcoin Core client cannot infer an address.
<br />
<br />

In this paper, we present a novel approach based on sound graph theory for identifying transaction inputs and outputs. Our solution implements two simple yet innovative features: it does not rely on BTC addresses and explores all the transactions stored in the blockchain. All the other existing solutions fail with respect to one or both of the cited features. In detail, we first introduce the concept of Unknown Transaction and provide a new framework to parse the Bitcoin blockchain by taking them into account. Then, we introduce a theoretical model to detect, study, and classify—for the first time in the literature— unknown transaction patterns in the user network. Further, in an extensive experimental campaign, we apply our model to the Bitcoin network to uncover hidden transaction patterns within the Bitcoin user network. Results are striking: we discovered more than 30, 000 unknown transaction DAGs, with a few of them exhibiting a complex yet ordered topology and potentially connected to automated payment services. To the best of our knowledge, the proposed framework is the only one that enables a complete study of the unknown transaction patterns, hence enabling further research in the fields—for which we provide some directions.
"

  - title: "MQT-TZ: Hardening IoT Brokers Using ARM TrustZone"
    venue: SRDS
    year: 2020
    authors:
      - "Carlos Segarra"
      - "Ricard Delgado-Gonzalo"
      - "Valerio Schiavoni"
    pdf: "SRDS2020_MQTTZ.pdf"
    abstract: "The publish-subscribe paradigm is an efficient communication scheme with strong decoupling between the nodes, that is especially fit for large-scale deployments. It adapts natively to very dynamic settings and it is used in a diversity of real-world scenarios, including finance, smart cities, medical environments, or IoT sensors. Several of the mentioned application scenarios require increasingly stringent security guarantees due to the sensitive nature of the exchanged messages as well as the privacy demands of the clients/stakeholders/receivers. MQTT is a lightweight topic-based publish-subscribe protocol popular in edge and IoT settings, a de-facto standard widely adopted nowadays by the industry and researchers. However, MQTT brokers must process data in clear, hence exposing a large attack surface.
<br />
<br />

This paper presents MQT-TZ, a secure MQTT broker leveraging ARM TRUSTZONE, a trusted execution environment (TEE) commonly found even on inexpensive devices largely available on the market (such as Raspberry Pi units). We define a mutual TLS-based handshake and a two-layer encryption for end-to-end security using the TEE as a trusted proxy. The experimental evaluation of our fully implemented prototype with micro-, macro-benchmarks, as well as with real-world industrial workloads from a MedTech use-case, highlights several tradeoffs using TRUSTZONE TEE. We report several lessons learned while building and evaluating our system. We release MQT-TZ as open-source.
"

  - title: "Kollaps: Decentralized and Dynamic Topology Emulation"
    venue: EuroSys
    year: 2020
    authors:
      - "Paulo Gouveia"
      - "Joao Neves"
      - "Carlos Segarra"
      - "Luca Liechti"
      - "Shady Issa"
      - "Valerio Schiavoni"
      - "Miguel Matos"
    pdf: "EUROSYS2020_Kollaps.pdf"
    abstract: "The performance and behavior of large-scale distributed applications is highly influenced by network properties such as latency, bandwidth, packet loss, and jitter. For instance, an engineer might need to answer questions such as: What is the impact of an increase in network latency in application response time? How does moving a cluster between geographical regions affect application throughput? How network dynamics affects application stability? Answering these questions in a systematic and reproducible way is very hard, given the variability and lack of control over the underlying network. Unfortunately, state-of-the-art network emulation or testbeds scale poorly (i.e., MiniNet), focus exclusively on the control-plane (i.e., CrystalNet) or ignore network dynamics (i.e., EmuLab).
<br />
<br />

Kollaps is a fully distributed network emulator that address these limitations. Kollaps hinges on two key observations. First, from an application’s perspective, what matters are the emergent end-to-end properties (e.g., latency, bandwidth, packet loss, and jitter) rather than the internal state of the routers and switches leading to those properties. This premise allows us to build a simpler, dynamically adaptable, emulation model that circumvent maintaining the full network state. Second, this simplified model is maintainable in a fully decentralized way, allowing the emulation to scale with the number of machines for the application.
<br />
<br />

Kollaps is fully decentralized, agnostic of the application language and transport protocol, scales to thousands of processes and is accurate when compared against a bare-metal deployment or state-of-the-art approaches that emulate the full state of the network. We showcase how Kollaps can accurately reproduce results from the literature and predict the behaviour of a complex unmodified distributed key-value store (i.e., Cassandra) under different deployments.
"

  - title: "MQT-TZ: Secure MQTT Broker for Biomedical Signal Processing on the Edge"
    venue: MIE
    year: 2020
    authors:
      - "Carlos Segarra"
      - "Ricard Delgado-Gonzalo"
      - "Valerio Schiavoni"
    pdf: "MIE2020_MQTTZ.pdf"
    abstract: "Physical health records belong to healthcare providers, but the information contained within belongs to each patient. In an increasing manner, more health-related data is being acquired by wearables and other IoT devices following the ever-increasing trend of the Quantified Self. Even though data protection regulations (e.g., GDPR) encourage the usage of privacy-preserving processing techniques, most of the current IoT infrastructure was not originally conceived for such purposes. One of the most used communication protocols, MQTT, is a lightweight publish-subscribe protocol commonly used in the Edge and IoT applications. In MQTT, the broker must process data on clear text, hence exposing a large attack surface for a malicious agent to steal/tamper with this health-related data. In this paper, we introduce MQT-TZ, a secure MQTT broker leveraging Arm TRUSTZONE, a popular Trusted Execution Environment (TEE). We define a mutual TLS-based handshake and a two-layer encryption for end-to-end security using the TEE as a trusted proxy. We provide quantitative evaluation of our open-source PoC on streaming ECGs in real time and highlight the trade-offs.
"

  - title: "Secure Stream Processing for Medical Data"
    venue: IEEE EMBC
    year: 2019
    authors:
      - "Carlos Segarra"
      - "Enric Muntane"
      - "Mathieu Lemay"
      - "Valerio Schiavoni"
      - "Ricard Delgado-Gonzalo"
    pdf: "EMBC2019_SecureStreamProcessing.pdf"
    abstract: "Medical data belongs to whom it produces it. In an increasing manner, this data is usually processed in unauthorized third-party clouds that should never have the opportunity to access it. Moreover, recent data protection regulations (e.g., GDPR) pave the way towards the development of privacy-preserving processing techniques. In this paper, we present a proof of concept of a streaming IoT architecture that securely processes cardiac data in the cloud combining trusted hardware and Spark. The additional security guarantees come with no changes to the application’s code in the server. We tested the system with a database containing ECGs from wearable devices comprised of 8 healthy males performing a standardized range of in-lab physical activities (e.g., run, walk, bike). We show that, when compared with standard SPARK STREAMING, the addition of privacy comes at the cost of doubling the execution time.
"

  - title: "Using Trusted Execution Environments for Secure Stream Processing of Medical Data"
    venue: DAIS
    year: 2019
    authors:
      - "Carlos Segarra"
      - "Ricard Delgado-Gonzalo"
      - "Mathieu Lemay"
      - "Pierre-Louis Aublin"
      - "Peter Pietzuch"
      - "Valerio Schiavoni"
    pdf: "DAIS2019_UsingTEE.pdf"
    abstract: " Processing sensitive data, such as those produced by body sensors, on third-party untrusted clouds is particularly challenging without compromising the privacy of the users generating it. Typically, these sensors generate large quantities of continuous data in a streaming fashion. Such vast amount of data must be processed efficiently and securely, even under strong adversarial models. The recent introduction in the mass-market of consumer-grade processors with Trusted Execution Environments (TEEs), such as Intel SGX, paves the way to implement solutions that overcome less flexible approaches, such as those atop homomorphic encryption. We present a secure streaming processing system built on top of Intel SGX to showcase the viability of this approach with a system specifically fitted for medical data. We design and fully implement a prototype system that we evaluate with several realistic datasets. Our experimental results show that the proposed system achieves modest overhead compared to vanilla Spark while offering additional protection guarantees under powerful attackers and threat models.
"

# Talks slides must be the name of the pdf under `./assets/talks`
talks:
  - project: "Is It Time To Put Cold Starts In The Deep Freeze?"
    talks:
      - date: "20/11/2024"
        venue: "SoCC 2024"
        url: "https://acmsocc.org/2024/schedule.html"
        slides: "DFaaS_SoCC2024.pdf"
      - date: "14/11/2024"
        venue: "LSDS Seminar"
        url: "https://lsds.doc.ic.ac.uk/seminars"
        slides: "DFaaS_SoCC2024.pdf"
  - project: "Serverless Confidential Containers: Challenges and Opportunities"
    talks:
      - date: "18/06/2024"
        venue: "Intelligent Serverless and Cloud Applications Symposium"
        url: "http://iscas.servicelaboratory.ch/#cs"
        slides: "CoCo_Serverless_ISCA.pptx"
      - date: "11/12/2023"
        venue: "Workshop on Serverless Computing (WOSC9)"
        url: "https://www.serverlesscomputing.org/wosc9/demos/d20"
        slides: "CoCo_Serverless_WOSC.pptx"
      - date: "07/12/2023"
        venue: "Kata Containers CoCo Community Meeting"
        url: "https://docs.google.com/document/d/1E3GLCzNgrcigUlgWAZYlgqNTdVwiMwCRTJ0QnJhLZGA/edit#heading=h.tq3g88t4cu45"
        slides: "CoCo_Serverless_KataCM.pdf"
      - date: "16/11/2023"
        venue: "IBM Research TJ Watson"
        url: "broken"
        slides: "broken"
  - project: "Granny: Granular Management of Scientific Applications in the Cloud"
    talks:
      - date: "05/10/2023"
        venue: "IBM Research TJ Watson"
        url: "broken"
        slides: "broken"
      - date: "24/05/2023"
        venue: "Oxford e-Research Center"
        url: "https://oerc.ox.ac.uk/events/granny-managing-compute-intensive-cloud-applications-using-granules-carlos-segarra/"
        slides: "broken"
